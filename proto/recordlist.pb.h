// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: recordlist.proto
// Protobuf C++ Version: 6.31.1

#ifndef recordlist_2eproto_2epb_2eh
#define recordlist_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_recordlist_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_recordlist_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_recordlist_2eproto;
}  // extern "C"
namespace recordlist {
class Dynamic_Avatar_Info;
struct Dynamic_Avatar_InfoDefaultTypeInternal;
extern Dynamic_Avatar_InfoDefaultTypeInternal _Dynamic_Avatar_Info_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Dynamic_Avatar_Info_class_data_;
class Player_Info;
struct Player_InfoDefaultTypeInternal;
extern Player_InfoDefaultTypeInternal _Player_Info_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Player_Info_class_data_;
class Player_Record;
struct Player_RecordDefaultTypeInternal;
extern Player_RecordDefaultTypeInternal _Player_Record_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Player_Record_class_data_;
class RecordList;
struct RecordListDefaultTypeInternal;
extern RecordListDefaultTypeInternal _RecordList_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RecordList_class_data_;
}  // namespace recordlist
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace recordlist {

// ===================================================================


// -------------------------------------------------------------------

class Dynamic_Avatar_Info final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:recordlist.Dynamic_Avatar_Info) */ {
 public:
  inline Dynamic_Avatar_Info() : Dynamic_Avatar_Info(nullptr) {}
  ~Dynamic_Avatar_Info() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Dynamic_Avatar_Info* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Dynamic_Avatar_Info));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Dynamic_Avatar_Info(::google::protobuf::internal::ConstantInitialized);

  inline Dynamic_Avatar_Info(const Dynamic_Avatar_Info& from) : Dynamic_Avatar_Info(nullptr, from) {}
  inline Dynamic_Avatar_Info(Dynamic_Avatar_Info&& from) noexcept
      : Dynamic_Avatar_Info(nullptr, ::std::move(from)) {}
  inline Dynamic_Avatar_Info& operator=(const Dynamic_Avatar_Info& from) {
    CopyFrom(from);
    return *this;
  }
  inline Dynamic_Avatar_Info& operator=(Dynamic_Avatar_Info&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Dynamic_Avatar_Info& default_instance() {
    return *reinterpret_cast<const Dynamic_Avatar_Info*>(
        &_Dynamic_Avatar_Info_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Dynamic_Avatar_Info& a, Dynamic_Avatar_Info& b) { a.Swap(&b); }
  inline void Swap(Dynamic_Avatar_Info* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Dynamic_Avatar_Info* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Dynamic_Avatar_Info* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Dynamic_Avatar_Info>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Dynamic_Avatar_Info& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Dynamic_Avatar_Info& from) { Dynamic_Avatar_Info::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Dynamic_Avatar_Info* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "recordlist.Dynamic_Avatar_Info"; }

 protected:
  explicit Dynamic_Avatar_Info(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Dynamic_Avatar_Info(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Dynamic_Avatar_Info& from);
  Dynamic_Avatar_Info(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Dynamic_Avatar_Info&& from) noexcept
      : Dynamic_Avatar_Info(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAvatarNumberFieldNumber = 1,
    kAvatarIdFieldNumber = 2,
  };
  // int32 avatar_number = 1;
  void clear_avatar_number() ;
  ::int32_t avatar_number() const;
  void set_avatar_number(::int32_t value);

  private:
  ::int32_t _internal_avatar_number() const;
  void _internal_set_avatar_number(::int32_t value);

  public:
  // int32 avatar_id = 2;
  void clear_avatar_id() ;
  ::int32_t avatar_id() const;
  void set_avatar_id(::int32_t value);

  private:
  ::int32_t _internal_avatar_id() const;
  void _internal_set_avatar_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:recordlist.Dynamic_Avatar_Info)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Dynamic_Avatar_Info& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int32_t avatar_number_;
    ::int32_t avatar_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_recordlist_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Dynamic_Avatar_Info_class_data_;
// -------------------------------------------------------------------

class Player_Info final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:recordlist.Player_Info) */ {
 public:
  inline Player_Info() : Player_Info(nullptr) {}
  ~Player_Info() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Player_Info* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Player_Info));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Player_Info(::google::protobuf::internal::ConstantInitialized);

  inline Player_Info(const Player_Info& from) : Player_Info(nullptr, from) {}
  inline Player_Info(Player_Info&& from) noexcept
      : Player_Info(nullptr, ::std::move(from)) {}
  inline Player_Info& operator=(const Player_Info& from) {
    CopyFrom(from);
    return *this;
  }
  inline Player_Info& operator=(Player_Info&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Player_Info& default_instance() {
    return *reinterpret_cast<const Player_Info*>(
        &_Player_Info_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Player_Info& a, Player_Info& b) { a.Swap(&b); }
  inline void Swap(Player_Info* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Player_Info* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Player_Info* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Player_Info>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Player_Info& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Player_Info& from) { Player_Info::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Player_Info* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "recordlist.Player_Info"; }

 protected:
  explicit Player_Info(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Player_Info(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Player_Info& from);
  Player_Info(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Player_Info&& from) noexcept
      : Player_Info(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNinjaNumberFieldNumber = 6,
    kFashionNumberFieldNumber = 8,
    kNicknameFieldNumber = 1,
    kAvatarUrlFieldNumber = 2,
    kAreaNameFieldNumber = 4,
    kDynamicAvatarFieldNumber = 9,
    kAreaCodeFieldNumber = 3,
    kRankFieldNumber = 7,
  };
  // repeated int32 ninja_number = 6 [packed = false];
  int ninja_number_size() const;
  private:
  int _internal_ninja_number_size() const;

  public:
  void clear_ninja_number() ;
  ::int32_t ninja_number(int index) const;
  void set_ninja_number(int index, ::int32_t value);
  void add_ninja_number(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& ninja_number() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL mutable_ninja_number();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_ninja_number() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL _internal_mutable_ninja_number();

  public:
  // repeated int32 fashion_number = 8 [packed = false];
  int fashion_number_size() const;
  private:
  int _internal_fashion_number_size() const;

  public:
  void clear_fashion_number() ;
  ::int32_t fashion_number(int index) const;
  void set_fashion_number(int index, ::int32_t value);
  void add_fashion_number(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& fashion_number() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL mutable_fashion_number();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_fashion_number() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL _internal_mutable_fashion_number();

  public:
  // string nickname = 1;
  void clear_nickname() ;
  const ::std::string& nickname() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_nickname();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_nickname();
  void set_allocated_nickname(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_nickname() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_nickname();

  public:
  // string avatar_url = 2;
  void clear_avatar_url() ;
  const ::std::string& avatar_url() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_avatar_url(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_avatar_url();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_avatar_url();
  void set_allocated_avatar_url(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_avatar_url() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_avatar_url(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_avatar_url();

  public:
  // string area_name = 4;
  void clear_area_name() ;
  const ::std::string& area_name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_area_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_area_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_area_name();
  void set_allocated_area_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_area_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_area_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_area_name();

  public:
  // .recordlist.Dynamic_Avatar_Info dynamic_avatar = 9;
  bool has_dynamic_avatar() const;
  void clear_dynamic_avatar() ;
  const ::recordlist::Dynamic_Avatar_Info& dynamic_avatar() const;
  [[nodiscard]] ::recordlist::Dynamic_Avatar_Info* PROTOBUF_NULLABLE release_dynamic_avatar();
  ::recordlist::Dynamic_Avatar_Info* PROTOBUF_NONNULL mutable_dynamic_avatar();
  void set_allocated_dynamic_avatar(::recordlist::Dynamic_Avatar_Info* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_dynamic_avatar(::recordlist::Dynamic_Avatar_Info* PROTOBUF_NULLABLE value);
  ::recordlist::Dynamic_Avatar_Info* PROTOBUF_NULLABLE unsafe_arena_release_dynamic_avatar();

  private:
  const ::recordlist::Dynamic_Avatar_Info& _internal_dynamic_avatar() const;
  ::recordlist::Dynamic_Avatar_Info* PROTOBUF_NONNULL _internal_mutable_dynamic_avatar();

  public:
  // int32 area_code = 3;
  void clear_area_code() ;
  ::int32_t area_code() const;
  void set_area_code(::int32_t value);

  private:
  ::int32_t _internal_area_code() const;
  void _internal_set_area_code(::int32_t value);

  public:
  // int32 rank = 7;
  void clear_rank() ;
  ::int32_t rank() const;
  void set_rank(::int32_t value);

  private:
  ::int32_t _internal_rank() const;
  void _internal_set_rank(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:recordlist.Player_Info)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 8,
                                   1, 66,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Player_Info& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> ninja_number_;
    ::google::protobuf::RepeatedField<::int32_t> fashion_number_;
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::google::protobuf::internal::ArenaStringPtr avatar_url_;
    ::google::protobuf::internal::ArenaStringPtr area_name_;
    ::recordlist::Dynamic_Avatar_Info* PROTOBUF_NULLABLE dynamic_avatar_;
    ::int32_t area_code_;
    ::int32_t rank_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_recordlist_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Player_Info_class_data_;
// -------------------------------------------------------------------

class Player_Record final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:recordlist.Player_Record) */ {
 public:
  inline Player_Record() : Player_Record(nullptr) {}
  ~Player_Record() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Player_Record* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Player_Record));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Player_Record(::google::protobuf::internal::ConstantInitialized);

  inline Player_Record(const Player_Record& from) : Player_Record(nullptr, from) {}
  inline Player_Record(Player_Record&& from) noexcept
      : Player_Record(nullptr, ::std::move(from)) {}
  inline Player_Record& operator=(const Player_Record& from) {
    CopyFrom(from);
    return *this;
  }
  inline Player_Record& operator=(Player_Record&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Player_Record& default_instance() {
    return *reinterpret_cast<const Player_Record*>(
        &_Player_Record_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Player_Record& a, Player_Record& b) { a.Swap(&b); }
  inline void Swap(Player_Record* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Player_Record* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Player_Record* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Player_Record>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Player_Record& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Player_Record& from) { Player_Record::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Player_Record* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "recordlist.Player_Record"; }

 protected:
  explicit Player_Record(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Player_Record(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Player_Record& from);
  Player_Record(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Player_Record&& from) noexcept
      : Player_Record(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDatetimeFieldNumber = 3,
    kInfoFieldNumber = 4,
    kTimestampFieldNumber = 1,
    kStatuFieldNumber = 2,
    kIsTempFieldNumber = 5,
  };
  // string datetime = 3;
  void clear_datetime() ;
  const ::std::string& datetime() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_datetime(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_datetime();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_datetime();
  void set_allocated_datetime(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_datetime() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_datetime(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_datetime();

  public:
  // .recordlist.Player_Info info = 4;
  bool has_info() const;
  void clear_info() ;
  const ::recordlist::Player_Info& info() const;
  [[nodiscard]] ::recordlist::Player_Info* PROTOBUF_NULLABLE release_info();
  ::recordlist::Player_Info* PROTOBUF_NONNULL mutable_info();
  void set_allocated_info(::recordlist::Player_Info* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_info(::recordlist::Player_Info* PROTOBUF_NULLABLE value);
  ::recordlist::Player_Info* PROTOBUF_NULLABLE unsafe_arena_release_info();

  private:
  const ::recordlist::Player_Info& _internal_info() const;
  ::recordlist::Player_Info* PROTOBUF_NONNULL _internal_mutable_info();

  public:
  // int64 timestamp = 1;
  void clear_timestamp() ;
  ::int64_t timestamp() const;
  void set_timestamp(::int64_t value);

  private:
  ::int64_t _internal_timestamp() const;
  void _internal_set_timestamp(::int64_t value);

  public:
  // int32 statu = 2;
  void clear_statu() ;
  ::int32_t statu() const;
  void set_statu(::int32_t value);

  private:
  ::int32_t _internal_statu() const;
  void _internal_set_statu(::int32_t value);

  public:
  // int32 is_temp = 5;
  void clear_is_temp() ;
  ::int32_t is_temp() const;
  void set_is_temp(::int32_t value);

  private:
  ::int32_t _internal_is_temp() const;
  void _internal_set_is_temp(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:recordlist.Player_Record)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   1, 41,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Player_Record& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr datetime_;
    ::recordlist::Player_Info* PROTOBUF_NULLABLE info_;
    ::int64_t timestamp_;
    ::int32_t statu_;
    ::int32_t is_temp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_recordlist_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Player_Record_class_data_;
// -------------------------------------------------------------------

class RecordList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:recordlist.RecordList) */ {
 public:
  inline RecordList() : RecordList(nullptr) {}
  ~RecordList() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RecordList* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RecordList));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RecordList(::google::protobuf::internal::ConstantInitialized);

  inline RecordList(const RecordList& from) : RecordList(nullptr, from) {}
  inline RecordList(RecordList&& from) noexcept
      : RecordList(nullptr, ::std::move(from)) {}
  inline RecordList& operator=(const RecordList& from) {
    CopyFrom(from);
    return *this;
  }
  inline RecordList& operator=(RecordList&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RecordList& default_instance() {
    return *reinterpret_cast<const RecordList*>(
        &_RecordList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(RecordList& a, RecordList& b) { a.Swap(&b); }
  inline void Swap(RecordList* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RecordList* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RecordList* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RecordList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RecordList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RecordList& from) { RecordList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RecordList* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "recordlist.RecordList"; }

 protected:
  explicit RecordList(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RecordList(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RecordList& from);
  RecordList(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RecordList&& from) noexcept
      : RecordList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemFieldNumber = 1,
  };
  // repeated .recordlist.Player_Record item = 1;
  int item_size() const;
  private:
  int _internal_item_size() const;

  public:
  void clear_item() ;
  ::recordlist::Player_Record* PROTOBUF_NONNULL mutable_item(int index);
  ::google::protobuf::RepeatedPtrField<::recordlist::Player_Record>* PROTOBUF_NONNULL mutable_item();

  private:
  const ::google::protobuf::RepeatedPtrField<::recordlist::Player_Record>& _internal_item() const;
  ::google::protobuf::RepeatedPtrField<::recordlist::Player_Record>* PROTOBUF_NONNULL _internal_mutable_item();
  public:
  const ::recordlist::Player_Record& item(int index) const;
  ::recordlist::Player_Record* PROTOBUF_NONNULL add_item();
  const ::google::protobuf::RepeatedPtrField<::recordlist::Player_Record>& item() const;
  // @@protoc_insertion_point(class_scope:recordlist.RecordList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RecordList& from_msg);
    ::google::protobuf::RepeatedPtrField< ::recordlist::Player_Record > item_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_recordlist_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RecordList_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Dynamic_Avatar_Info

// int32 avatar_number = 1;
inline void Dynamic_Avatar_Info::clear_avatar_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avatar_number_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t Dynamic_Avatar_Info::avatar_number() const {
  // @@protoc_insertion_point(field_get:recordlist.Dynamic_Avatar_Info.avatar_number)
  return _internal_avatar_number();
}
inline void Dynamic_Avatar_Info::set_avatar_number(::int32_t value) {
  _internal_set_avatar_number(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:recordlist.Dynamic_Avatar_Info.avatar_number)
}
inline ::int32_t Dynamic_Avatar_Info::_internal_avatar_number() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.avatar_number_;
}
inline void Dynamic_Avatar_Info::_internal_set_avatar_number(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avatar_number_ = value;
}

// int32 avatar_id = 2;
inline void Dynamic_Avatar_Info::clear_avatar_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avatar_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t Dynamic_Avatar_Info::avatar_id() const {
  // @@protoc_insertion_point(field_get:recordlist.Dynamic_Avatar_Info.avatar_id)
  return _internal_avatar_id();
}
inline void Dynamic_Avatar_Info::set_avatar_id(::int32_t value) {
  _internal_set_avatar_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:recordlist.Dynamic_Avatar_Info.avatar_id)
}
inline ::int32_t Dynamic_Avatar_Info::_internal_avatar_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.avatar_id_;
}
inline void Dynamic_Avatar_Info::_internal_set_avatar_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avatar_id_ = value;
}

// -------------------------------------------------------------------

// Player_Info

// string nickname = 1;
inline void Player_Info::clear_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nickname_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Player_Info::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:recordlist.Player_Info.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Player_Info::set_nickname(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:recordlist.Player_Info.nickname)
}
inline ::std::string* PROTOBUF_NONNULL Player_Info::mutable_nickname()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:recordlist.Player_Info.nickname)
  return _s;
}
inline const ::std::string& Player_Info::_internal_nickname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nickname_.Get();
}
inline void Player_Info::_internal_set_nickname(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.nickname_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Player_Info::_internal_mutable_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.nickname_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Player_Info::release_nickname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:recordlist.Player_Info.nickname)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.nickname_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.nickname_.Set("", GetArena());
  }
  return released;
}
inline void Player_Info::set_allocated_nickname(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.nickname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.nickname_.IsDefault()) {
    _impl_.nickname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:recordlist.Player_Info.nickname)
}

// string avatar_url = 2;
inline void Player_Info::clear_avatar_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avatar_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& Player_Info::avatar_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:recordlist.Player_Info.avatar_url)
  return _internal_avatar_url();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Player_Info::set_avatar_url(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.avatar_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:recordlist.Player_Info.avatar_url)
}
inline ::std::string* PROTOBUF_NONNULL Player_Info::mutable_avatar_url()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_avatar_url();
  // @@protoc_insertion_point(field_mutable:recordlist.Player_Info.avatar_url)
  return _s;
}
inline const ::std::string& Player_Info::_internal_avatar_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.avatar_url_.Get();
}
inline void Player_Info::_internal_set_avatar_url(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.avatar_url_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Player_Info::_internal_mutable_avatar_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.avatar_url_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Player_Info::release_avatar_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:recordlist.Player_Info.avatar_url)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.avatar_url_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.avatar_url_.Set("", GetArena());
  }
  return released;
}
inline void Player_Info::set_allocated_avatar_url(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.avatar_url_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.avatar_url_.IsDefault()) {
    _impl_.avatar_url_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:recordlist.Player_Info.avatar_url)
}

// int32 area_code = 3;
inline void Player_Info::clear_area_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.area_code_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t Player_Info::area_code() const {
  // @@protoc_insertion_point(field_get:recordlist.Player_Info.area_code)
  return _internal_area_code();
}
inline void Player_Info::set_area_code(::int32_t value) {
  _internal_set_area_code(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:recordlist.Player_Info.area_code)
}
inline ::int32_t Player_Info::_internal_area_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.area_code_;
}
inline void Player_Info::_internal_set_area_code(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.area_code_ = value;
}

// string area_name = 4;
inline void Player_Info::clear_area_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.area_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& Player_Info::area_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:recordlist.Player_Info.area_name)
  return _internal_area_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Player_Info::set_area_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.area_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:recordlist.Player_Info.area_name)
}
inline ::std::string* PROTOBUF_NONNULL Player_Info::mutable_area_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_area_name();
  // @@protoc_insertion_point(field_mutable:recordlist.Player_Info.area_name)
  return _s;
}
inline const ::std::string& Player_Info::_internal_area_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.area_name_.Get();
}
inline void Player_Info::_internal_set_area_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.area_name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Player_Info::_internal_mutable_area_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.area_name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Player_Info::release_area_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:recordlist.Player_Info.area_name)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.area_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.area_name_.Set("", GetArena());
  }
  return released;
}
inline void Player_Info::set_allocated_area_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.area_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.area_name_.IsDefault()) {
    _impl_.area_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:recordlist.Player_Info.area_name)
}

// repeated int32 ninja_number = 6 [packed = false];
inline int Player_Info::_internal_ninja_number_size() const {
  return _internal_ninja_number().size();
}
inline int Player_Info::ninja_number_size() const {
  return _internal_ninja_number_size();
}
inline void Player_Info::clear_ninja_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ninja_number_.Clear();
}
inline ::int32_t Player_Info::ninja_number(int index) const {
  // @@protoc_insertion_point(field_get:recordlist.Player_Info.ninja_number)
  return _internal_ninja_number().Get(index);
}
inline void Player_Info::set_ninja_number(int index, ::int32_t value) {
  _internal_mutable_ninja_number()->Set(index, value);
  // @@protoc_insertion_point(field_set:recordlist.Player_Info.ninja_number)
}
inline void Player_Info::add_ninja_number(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_ninja_number()->Add(value);
  // @@protoc_insertion_point(field_add:recordlist.Player_Info.ninja_number)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Player_Info::ninja_number() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:recordlist.Player_Info.ninja_number)
  return _internal_ninja_number();
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL Player_Info::mutable_ninja_number()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:recordlist.Player_Info.ninja_number)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ninja_number();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
Player_Info::_internal_ninja_number() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ninja_number_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL
Player_Info::_internal_mutable_ninja_number() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ninja_number_;
}

// int32 rank = 7;
inline void Player_Info::clear_rank() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rank_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t Player_Info::rank() const {
  // @@protoc_insertion_point(field_get:recordlist.Player_Info.rank)
  return _internal_rank();
}
inline void Player_Info::set_rank(::int32_t value) {
  _internal_set_rank(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:recordlist.Player_Info.rank)
}
inline ::int32_t Player_Info::_internal_rank() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rank_;
}
inline void Player_Info::_internal_set_rank(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rank_ = value;
}

// repeated int32 fashion_number = 8 [packed = false];
inline int Player_Info::_internal_fashion_number_size() const {
  return _internal_fashion_number().size();
}
inline int Player_Info::fashion_number_size() const {
  return _internal_fashion_number_size();
}
inline void Player_Info::clear_fashion_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fashion_number_.Clear();
}
inline ::int32_t Player_Info::fashion_number(int index) const {
  // @@protoc_insertion_point(field_get:recordlist.Player_Info.fashion_number)
  return _internal_fashion_number().Get(index);
}
inline void Player_Info::set_fashion_number(int index, ::int32_t value) {
  _internal_mutable_fashion_number()->Set(index, value);
  // @@protoc_insertion_point(field_set:recordlist.Player_Info.fashion_number)
}
inline void Player_Info::add_fashion_number(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_fashion_number()->Add(value);
  // @@protoc_insertion_point(field_add:recordlist.Player_Info.fashion_number)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& Player_Info::fashion_number() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:recordlist.Player_Info.fashion_number)
  return _internal_fashion_number();
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL Player_Info::mutable_fashion_number()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:recordlist.Player_Info.fashion_number)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_fashion_number();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
Player_Info::_internal_fashion_number() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fashion_number_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL
Player_Info::_internal_mutable_fashion_number() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.fashion_number_;
}

// .recordlist.Dynamic_Avatar_Info dynamic_avatar = 9;
inline bool Player_Info::has_dynamic_avatar() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.dynamic_avatar_ != nullptr);
  return value;
}
inline void Player_Info::clear_dynamic_avatar() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dynamic_avatar_ != nullptr) _impl_.dynamic_avatar_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::recordlist::Dynamic_Avatar_Info& Player_Info::_internal_dynamic_avatar() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::recordlist::Dynamic_Avatar_Info* p = _impl_.dynamic_avatar_;
  return p != nullptr ? *p : reinterpret_cast<const ::recordlist::Dynamic_Avatar_Info&>(::recordlist::_Dynamic_Avatar_Info_default_instance_);
}
inline const ::recordlist::Dynamic_Avatar_Info& Player_Info::dynamic_avatar() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:recordlist.Player_Info.dynamic_avatar)
  return _internal_dynamic_avatar();
}
inline void Player_Info::unsafe_arena_set_allocated_dynamic_avatar(
    ::recordlist::Dynamic_Avatar_Info* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dynamic_avatar_);
  }
  _impl_.dynamic_avatar_ = reinterpret_cast<::recordlist::Dynamic_Avatar_Info*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:recordlist.Player_Info.dynamic_avatar)
}
inline ::recordlist::Dynamic_Avatar_Info* PROTOBUF_NULLABLE Player_Info::release_dynamic_avatar() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::recordlist::Dynamic_Avatar_Info* released = _impl_.dynamic_avatar_;
  _impl_.dynamic_avatar_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::recordlist::Dynamic_Avatar_Info* PROTOBUF_NULLABLE Player_Info::unsafe_arena_release_dynamic_avatar() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:recordlist.Player_Info.dynamic_avatar)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::recordlist::Dynamic_Avatar_Info* temp = _impl_.dynamic_avatar_;
  _impl_.dynamic_avatar_ = nullptr;
  return temp;
}
inline ::recordlist::Dynamic_Avatar_Info* PROTOBUF_NONNULL Player_Info::_internal_mutable_dynamic_avatar() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dynamic_avatar_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::recordlist::Dynamic_Avatar_Info>(GetArena());
    _impl_.dynamic_avatar_ = reinterpret_cast<::recordlist::Dynamic_Avatar_Info*>(p);
  }
  return _impl_.dynamic_avatar_;
}
inline ::recordlist::Dynamic_Avatar_Info* PROTOBUF_NONNULL Player_Info::mutable_dynamic_avatar()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::recordlist::Dynamic_Avatar_Info* _msg = _internal_mutable_dynamic_avatar();
  // @@protoc_insertion_point(field_mutable:recordlist.Player_Info.dynamic_avatar)
  return _msg;
}
inline void Player_Info::set_allocated_dynamic_avatar(::recordlist::Dynamic_Avatar_Info* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dynamic_avatar_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.dynamic_avatar_ = reinterpret_cast<::recordlist::Dynamic_Avatar_Info*>(value);
  // @@protoc_insertion_point(field_set_allocated:recordlist.Player_Info.dynamic_avatar)
}

// -------------------------------------------------------------------

// Player_Record

// int64 timestamp = 1;
inline void Player_Record::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t Player_Record::timestamp() const {
  // @@protoc_insertion_point(field_get:recordlist.Player_Record.timestamp)
  return _internal_timestamp();
}
inline void Player_Record::set_timestamp(::int64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:recordlist.Player_Record.timestamp)
}
inline ::int64_t Player_Record::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void Player_Record::_internal_set_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// int32 statu = 2;
inline void Player_Record::clear_statu() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.statu_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t Player_Record::statu() const {
  // @@protoc_insertion_point(field_get:recordlist.Player_Record.statu)
  return _internal_statu();
}
inline void Player_Record::set_statu(::int32_t value) {
  _internal_set_statu(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:recordlist.Player_Record.statu)
}
inline ::int32_t Player_Record::_internal_statu() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.statu_;
}
inline void Player_Record::_internal_set_statu(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.statu_ = value;
}

// string datetime = 3;
inline void Player_Record::clear_datetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.datetime_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Player_Record::datetime() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:recordlist.Player_Record.datetime)
  return _internal_datetime();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Player_Record::set_datetime(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.datetime_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:recordlist.Player_Record.datetime)
}
inline ::std::string* PROTOBUF_NONNULL Player_Record::mutable_datetime()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_datetime();
  // @@protoc_insertion_point(field_mutable:recordlist.Player_Record.datetime)
  return _s;
}
inline const ::std::string& Player_Record::_internal_datetime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.datetime_.Get();
}
inline void Player_Record::_internal_set_datetime(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.datetime_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Player_Record::_internal_mutable_datetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.datetime_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Player_Record::release_datetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:recordlist.Player_Record.datetime)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.datetime_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.datetime_.Set("", GetArena());
  }
  return released;
}
inline void Player_Record::set_allocated_datetime(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.datetime_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.datetime_.IsDefault()) {
    _impl_.datetime_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:recordlist.Player_Record.datetime)
}

// .recordlist.Player_Info info = 4;
inline bool Player_Record::has_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.info_ != nullptr);
  return value;
}
inline void Player_Record::clear_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.info_ != nullptr) _impl_.info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::recordlist::Player_Info& Player_Record::_internal_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::recordlist::Player_Info* p = _impl_.info_;
  return p != nullptr ? *p : reinterpret_cast<const ::recordlist::Player_Info&>(::recordlist::_Player_Info_default_instance_);
}
inline const ::recordlist::Player_Info& Player_Record::info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:recordlist.Player_Record.info)
  return _internal_info();
}
inline void Player_Record::unsafe_arena_set_allocated_info(
    ::recordlist::Player_Info* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.info_);
  }
  _impl_.info_ = reinterpret_cast<::recordlist::Player_Info*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:recordlist.Player_Record.info)
}
inline ::recordlist::Player_Info* PROTOBUF_NULLABLE Player_Record::release_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::recordlist::Player_Info* released = _impl_.info_;
  _impl_.info_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::recordlist::Player_Info* PROTOBUF_NULLABLE Player_Record::unsafe_arena_release_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:recordlist.Player_Record.info)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::recordlist::Player_Info* temp = _impl_.info_;
  _impl_.info_ = nullptr;
  return temp;
}
inline ::recordlist::Player_Info* PROTOBUF_NONNULL Player_Record::_internal_mutable_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::recordlist::Player_Info>(GetArena());
    _impl_.info_ = reinterpret_cast<::recordlist::Player_Info*>(p);
  }
  return _impl_.info_;
}
inline ::recordlist::Player_Info* PROTOBUF_NONNULL Player_Record::mutable_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::recordlist::Player_Info* _msg = _internal_mutable_info();
  // @@protoc_insertion_point(field_mutable:recordlist.Player_Record.info)
  return _msg;
}
inline void Player_Record::set_allocated_info(::recordlist::Player_Info* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.info_ = reinterpret_cast<::recordlist::Player_Info*>(value);
  // @@protoc_insertion_point(field_set_allocated:recordlist.Player_Record.info)
}

// int32 is_temp = 5;
inline void Player_Record::clear_is_temp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_temp_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t Player_Record::is_temp() const {
  // @@protoc_insertion_point(field_get:recordlist.Player_Record.is_temp)
  return _internal_is_temp();
}
inline void Player_Record::set_is_temp(::int32_t value) {
  _internal_set_is_temp(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:recordlist.Player_Record.is_temp)
}
inline ::int32_t Player_Record::_internal_is_temp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_temp_;
}
inline void Player_Record::_internal_set_is_temp(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_temp_ = value;
}

// -------------------------------------------------------------------

// RecordList

// repeated .recordlist.Player_Record item = 1;
inline int RecordList::_internal_item_size() const {
  return _internal_item().size();
}
inline int RecordList::item_size() const {
  return _internal_item_size();
}
inline void RecordList::clear_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.item_.Clear();
}
inline ::recordlist::Player_Record* PROTOBUF_NONNULL RecordList::mutable_item(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:recordlist.RecordList.item)
  return _internal_mutable_item()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::recordlist::Player_Record>* PROTOBUF_NONNULL RecordList::mutable_item()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:recordlist.RecordList.item)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_item();
}
inline const ::recordlist::Player_Record& RecordList::item(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:recordlist.RecordList.item)
  return _internal_item().Get(index);
}
inline ::recordlist::Player_Record* PROTOBUF_NONNULL RecordList::add_item()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::recordlist::Player_Record* _add = _internal_mutable_item()->Add();
  // @@protoc_insertion_point(field_add:recordlist.RecordList.item)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::recordlist::Player_Record>& RecordList::item() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:recordlist.RecordList.item)
  return _internal_item();
}
inline const ::google::protobuf::RepeatedPtrField<::recordlist::Player_Record>&
RecordList::_internal_item() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.item_;
}
inline ::google::protobuf::RepeatedPtrField<::recordlist::Player_Record>* PROTOBUF_NONNULL
RecordList::_internal_mutable_item() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.item_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace recordlist


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // recordlist_2eproto_2epb_2eh
