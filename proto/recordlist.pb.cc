// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: recordlist.proto
// Protobuf C++ Version: 6.31.1

#include "recordlist.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace recordlist {

inline constexpr Dynamic_Avatar_Info::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        avatar_number_{0},
        avatar_id_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Dynamic_Avatar_Info::Dynamic_Avatar_Info(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Dynamic_Avatar_Info_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Dynamic_Avatar_InfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Dynamic_Avatar_InfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Dynamic_Avatar_InfoDefaultTypeInternal() {}
  union {
    Dynamic_Avatar_Info _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Dynamic_Avatar_InfoDefaultTypeInternal _Dynamic_Avatar_Info_default_instance_;

inline constexpr Player_Info::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ninja_number_{},
        fashion_number_{},
        nickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        avatar_url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        area_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dynamic_avatar_{nullptr},
        area_code_{0},
        rank_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Player_Info::Player_Info(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Player_Info_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Player_InfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Player_InfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Player_InfoDefaultTypeInternal() {}
  union {
    Player_Info _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Player_InfoDefaultTypeInternal _Player_Info_default_instance_;

inline constexpr Player_Record::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        datetime_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        info_{nullptr},
        timestamp_{::int64_t{0}},
        statu_{0},
        is_temp_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Player_Record::Player_Record(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Player_Record_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Player_RecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Player_RecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Player_RecordDefaultTypeInternal() {}
  union {
    Player_Record _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Player_RecordDefaultTypeInternal _Player_Record_default_instance_;

inline constexpr RecordList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : item_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RecordList::RecordList(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RecordList_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RecordListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RecordListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RecordListDefaultTypeInternal() {}
  union {
    RecordList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RecordListDefaultTypeInternal _RecordList_default_instance_;
}  // namespace recordlist
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_recordlist_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_recordlist_2eproto = nullptr;
const ::uint32_t
    TableStruct_recordlist_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::recordlist::Dynamic_Avatar_Info, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::recordlist::Dynamic_Avatar_Info, _impl_.avatar_number_),
        PROTOBUF_FIELD_OFFSET(::recordlist::Dynamic_Avatar_Info, _impl_.avatar_id_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::recordlist::Player_Info, _impl_._has_bits_),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::recordlist::Player_Info, _impl_.nickname_),
        PROTOBUF_FIELD_OFFSET(::recordlist::Player_Info, _impl_.avatar_url_),
        PROTOBUF_FIELD_OFFSET(::recordlist::Player_Info, _impl_.area_code_),
        PROTOBUF_FIELD_OFFSET(::recordlist::Player_Info, _impl_.area_name_),
        PROTOBUF_FIELD_OFFSET(::recordlist::Player_Info, _impl_.ninja_number_),
        PROTOBUF_FIELD_OFFSET(::recordlist::Player_Info, _impl_.rank_),
        PROTOBUF_FIELD_OFFSET(::recordlist::Player_Info, _impl_.fashion_number_),
        PROTOBUF_FIELD_OFFSET(::recordlist::Player_Info, _impl_.dynamic_avatar_),
        0,
        1,
        4,
        2,
        ~0u,
        5,
        ~0u,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::recordlist::Player_Record, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::recordlist::Player_Record, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::recordlist::Player_Record, _impl_.statu_),
        PROTOBUF_FIELD_OFFSET(::recordlist::Player_Record, _impl_.datetime_),
        PROTOBUF_FIELD_OFFSET(::recordlist::Player_Record, _impl_.info_),
        PROTOBUF_FIELD_OFFSET(::recordlist::Player_Record, _impl_.is_temp_),
        2,
        3,
        0,
        1,
        4,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::recordlist::RecordList, _impl_.item_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::recordlist::Dynamic_Avatar_Info)},
        {7, sizeof(::recordlist::Player_Info)},
        {26, sizeof(::recordlist::Player_Record)},
        {39, sizeof(::recordlist::RecordList)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::recordlist::_Dynamic_Avatar_Info_default_instance_._instance,
    &::recordlist::_Player_Info_default_instance_._instance,
    &::recordlist::_Player_Record_default_instance_._instance,
    &::recordlist::_RecordList_default_instance_._instance,
};
const char descriptor_table_protodef_recordlist_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\020recordlist.proto\022\nrecordlist\"\?\n\023Dynami"
    "c_Avatar_Info\022\025\n\ravatar_number\030\001 \001(\005\022\021\n\t"
    "avatar_id\030\002 \001(\005\"\326\001\n\013Player_Info\022\020\n\010nickn"
    "ame\030\001 \001(\t\022\022\n\navatar_url\030\002 \001(\t\022\021\n\tarea_co"
    "de\030\003 \001(\005\022\021\n\tarea_name\030\004 \001(\t\022\030\n\014ninja_num"
    "ber\030\006 \003(\005B\002\020\000\022\014\n\004rank\030\007 \001(\005\022\032\n\016fashion_n"
    "umber\030\010 \003(\005B\002\020\000\0227\n\016dynamic_avatar\030\t \001(\0132"
    "\037.recordlist.Dynamic_Avatar_Info\"{\n\rPlay"
    "er_Record\022\021\n\ttimestamp\030\001 \001(\003\022\r\n\005statu\030\002 "
    "\001(\005\022\020\n\010datetime\030\003 \001(\t\022%\n\004info\030\004 \001(\0132\027.re"
    "cordlist.Player_Info\022\017\n\007is_temp\030\005 \001(\005\"9\n"
    "\nRecordList\022+\n\004item\030\001 \003(\0132\031.recordlist.P"
    "layer_RecordB\002\020\000b\006proto3"
};
static ::absl::once_flag descriptor_table_recordlist_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_recordlist_2eproto = {
    false,
    false,
    504,
    descriptor_table_protodef_recordlist_2eproto,
    "recordlist.proto",
    &descriptor_table_recordlist_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_recordlist_2eproto::offsets,
    file_level_enum_descriptors_recordlist_2eproto,
    file_level_service_descriptors_recordlist_2eproto,
};
namespace recordlist {
// ===================================================================

class Dynamic_Avatar_Info::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Dynamic_Avatar_Info>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Dynamic_Avatar_Info, _impl_._has_bits_);
};

Dynamic_Avatar_Info::Dynamic_Avatar_Info(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Dynamic_Avatar_Info_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:recordlist.Dynamic_Avatar_Info)
}
Dynamic_Avatar_Info::Dynamic_Avatar_Info(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Dynamic_Avatar_Info& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Dynamic_Avatar_Info_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE Dynamic_Avatar_Info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Dynamic_Avatar_Info::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, avatar_number_),
           0,
           offsetof(Impl_, avatar_id_) -
               offsetof(Impl_, avatar_number_) +
               sizeof(Impl_::avatar_id_));
}
Dynamic_Avatar_Info::~Dynamic_Avatar_Info() {
  // @@protoc_insertion_point(destructor:recordlist.Dynamic_Avatar_Info)
  SharedDtor(*this);
}
inline void Dynamic_Avatar_Info::SharedDtor(MessageLite& self) {
  Dynamic_Avatar_Info& this_ = static_cast<Dynamic_Avatar_Info&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Dynamic_Avatar_Info::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Dynamic_Avatar_Info(arena);
}
constexpr auto Dynamic_Avatar_Info::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Dynamic_Avatar_Info),
                                            alignof(Dynamic_Avatar_Info));
}
constexpr auto Dynamic_Avatar_Info::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Dynamic_Avatar_Info_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Dynamic_Avatar_Info::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Dynamic_Avatar_Info>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Dynamic_Avatar_Info::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Dynamic_Avatar_Info>(), &Dynamic_Avatar_Info::ByteSizeLong,
              &Dynamic_Avatar_Info::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Dynamic_Avatar_Info, _impl_._cached_size_),
          false,
      },
      &Dynamic_Avatar_Info::kDescriptorMethods,
      &descriptor_table_recordlist_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Dynamic_Avatar_Info_class_data_ =
        Dynamic_Avatar_Info::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Dynamic_Avatar_Info::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Dynamic_Avatar_Info_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Dynamic_Avatar_Info_class_data_.tc_table);
  return Dynamic_Avatar_Info_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
Dynamic_Avatar_Info::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Dynamic_Avatar_Info, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Dynamic_Avatar_Info_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::recordlist::Dynamic_Avatar_Info>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 avatar_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Dynamic_Avatar_Info, _impl_.avatar_id_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(Dynamic_Avatar_Info, _impl_.avatar_id_)}},
    // int32 avatar_number = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Dynamic_Avatar_Info, _impl_.avatar_number_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Dynamic_Avatar_Info, _impl_.avatar_number_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 avatar_number = 1;
    {PROTOBUF_FIELD_OFFSET(Dynamic_Avatar_Info, _impl_.avatar_number_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 avatar_id = 2;
    {PROTOBUF_FIELD_OFFSET(Dynamic_Avatar_Info, _impl_.avatar_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Dynamic_Avatar_Info::Clear() {
// @@protoc_insertion_point(message_clear_start:recordlist.Dynamic_Avatar_Info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    ::memset(&_impl_.avatar_number_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.avatar_id_) -
        reinterpret_cast<char*>(&_impl_.avatar_number_)) + sizeof(_impl_.avatar_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Dynamic_Avatar_Info::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Dynamic_Avatar_Info& this_ = static_cast<const Dynamic_Avatar_Info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Dynamic_Avatar_Info::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Dynamic_Avatar_Info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:recordlist.Dynamic_Avatar_Info)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 avatar_number = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_avatar_number() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_avatar_number(), target);
    }
  }

  // int32 avatar_id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_avatar_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_avatar_id(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:recordlist.Dynamic_Avatar_Info)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Dynamic_Avatar_Info::ByteSizeLong(const MessageLite& base) {
  const Dynamic_Avatar_Info& this_ = static_cast<const Dynamic_Avatar_Info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Dynamic_Avatar_Info::ByteSizeLong() const {
  const Dynamic_Avatar_Info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:recordlist.Dynamic_Avatar_Info)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // int32 avatar_number = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_avatar_number() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_avatar_number());
      }
    }
    // int32 avatar_id = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_avatar_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_avatar_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Dynamic_Avatar_Info::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Dynamic_Avatar_Info*>(&to_msg);
  auto& from = static_cast<const Dynamic_Avatar_Info&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:recordlist.Dynamic_Avatar_Info)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_avatar_number() != 0) {
        _this->_impl_.avatar_number_ = from._impl_.avatar_number_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_avatar_id() != 0) {
        _this->_impl_.avatar_id_ = from._impl_.avatar_id_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Dynamic_Avatar_Info::CopyFrom(const Dynamic_Avatar_Info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:recordlist.Dynamic_Avatar_Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Dynamic_Avatar_Info::InternalSwap(Dynamic_Avatar_Info* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Dynamic_Avatar_Info, _impl_.avatar_id_)
      + sizeof(Dynamic_Avatar_Info::_impl_.avatar_id_)
      - PROTOBUF_FIELD_OFFSET(Dynamic_Avatar_Info, _impl_.avatar_number_)>(
          reinterpret_cast<char*>(&_impl_.avatar_number_),
          reinterpret_cast<char*>(&other->_impl_.avatar_number_));
}

::google::protobuf::Metadata Dynamic_Avatar_Info::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Player_Info::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Player_Info>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Player_Info, _impl_._has_bits_);
};

Player_Info::Player_Info(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Player_Info_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:recordlist.Player_Info)
}
PROTOBUF_NDEBUG_INLINE Player_Info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::recordlist::Player_Info& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        ninja_number_{visibility, arena, from.ninja_number_},
        fashion_number_{visibility, arena, from.fashion_number_},
        nickname_(arena, from.nickname_),
        avatar_url_(arena, from.avatar_url_),
        area_name_(arena, from.area_name_) {}

Player_Info::Player_Info(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Player_Info& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Player_Info_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Player_Info* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.dynamic_avatar_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dynamic_avatar_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, area_code_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, area_code_),
           offsetof(Impl_, rank_) -
               offsetof(Impl_, area_code_) +
               sizeof(Impl_::rank_));

  // @@protoc_insertion_point(copy_constructor:recordlist.Player_Info)
}
PROTOBUF_NDEBUG_INLINE Player_Info::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        ninja_number_{visibility, arena},
        fashion_number_{visibility, arena},
        nickname_(arena),
        avatar_url_(arena),
        area_name_(arena) {}

inline void Player_Info::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, dynamic_avatar_),
           0,
           offsetof(Impl_, rank_) -
               offsetof(Impl_, dynamic_avatar_) +
               sizeof(Impl_::rank_));
}
Player_Info::~Player_Info() {
  // @@protoc_insertion_point(destructor:recordlist.Player_Info)
  SharedDtor(*this);
}
inline void Player_Info::SharedDtor(MessageLite& self) {
  Player_Info& this_ = static_cast<Player_Info&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.nickname_.Destroy();
  this_._impl_.avatar_url_.Destroy();
  this_._impl_.area_name_.Destroy();
  delete this_._impl_.dynamic_avatar_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Player_Info::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Player_Info(arena);
}
constexpr auto Player_Info::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Player_Info, _impl_.ninja_number_) +
          decltype(Player_Info::_impl_.ninja_number_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Player_Info, _impl_.fashion_number_) +
          decltype(Player_Info::_impl_.fashion_number_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Player_Info), alignof(Player_Info), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Player_Info::PlacementNew_,
                                 sizeof(Player_Info),
                                 alignof(Player_Info));
  }
}
constexpr auto Player_Info::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Player_Info_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Player_Info::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Player_Info>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Player_Info::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Player_Info>(), &Player_Info::ByteSizeLong,
              &Player_Info::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Player_Info, _impl_._cached_size_),
          false,
      },
      &Player_Info::kDescriptorMethods,
      &descriptor_table_recordlist_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Player_Info_class_data_ =
        Player_Info::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Player_Info::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Player_Info_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Player_Info_class_data_.tc_table);
  return Player_Info_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 8, 1, 66, 2>
Player_Info::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Player_Info, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966800,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Player_Info_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::recordlist::Player_Info>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string nickname = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Player_Info, _impl_.nickname_)}},
    // string avatar_url = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Player_Info, _impl_.avatar_url_)}},
    // int32 area_code = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Player_Info, _impl_.area_code_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(Player_Info, _impl_.area_code_)}},
    // string area_name = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(Player_Info, _impl_.area_name_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated int32 ninja_number = 6 [packed = false];
    {::_pbi::TcParser::FastV32R1,
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Player_Info, _impl_.ninja_number_)}},
    // int32 rank = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Player_Info, _impl_.rank_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(Player_Info, _impl_.rank_)}},
    // repeated int32 fashion_number = 8 [packed = false];
    {::_pbi::TcParser::FastV32R1,
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(Player_Info, _impl_.fashion_number_)}},
    // .recordlist.Dynamic_Avatar_Info dynamic_avatar = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 3, 0, PROTOBUF_FIELD_OFFSET(Player_Info, _impl_.dynamic_avatar_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string nickname = 1;
    {PROTOBUF_FIELD_OFFSET(Player_Info, _impl_.nickname_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string avatar_url = 2;
    {PROTOBUF_FIELD_OFFSET(Player_Info, _impl_.avatar_url_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 area_code = 3;
    {PROTOBUF_FIELD_OFFSET(Player_Info, _impl_.area_code_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string area_name = 4;
    {PROTOBUF_FIELD_OFFSET(Player_Info, _impl_.area_name_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated int32 ninja_number = 6 [packed = false];
    {PROTOBUF_FIELD_OFFSET(Player_Info, _impl_.ninja_number_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // int32 rank = 7;
    {PROTOBUF_FIELD_OFFSET(Player_Info, _impl_.rank_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated int32 fashion_number = 8 [packed = false];
    {PROTOBUF_FIELD_OFFSET(Player_Info, _impl_.fashion_number_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kInt32)},
    // .recordlist.Dynamic_Avatar_Info dynamic_avatar = 9;
    {PROTOBUF_FIELD_OFFSET(Player_Info, _impl_.dynamic_avatar_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::recordlist::Dynamic_Avatar_Info>()},
  }},
  {{
    "\26\10\12\0\11\0\0\0\0\0\0\0\0\0\0\0"
    "recordlist.Player_Info"
    "nickname"
    "avatar_url"
    "area_name"
  }},
};
PROTOBUF_NOINLINE void Player_Info::Clear() {
// @@protoc_insertion_point(message_clear_start:recordlist.Player_Info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ninja_number_.Clear();
  _impl_.fashion_number_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.nickname_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.avatar_url_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.area_name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.dynamic_avatar_ != nullptr);
      _impl_.dynamic_avatar_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000030u) != 0) {
    ::memset(&_impl_.area_code_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.rank_) -
        reinterpret_cast<char*>(&_impl_.area_code_)) + sizeof(_impl_.rank_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Player_Info::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Player_Info& this_ = static_cast<const Player_Info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Player_Info::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Player_Info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:recordlist.Player_Info)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string nickname = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_nickname().empty()) {
      const ::std::string& _s = this_._internal_nickname();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "recordlist.Player_Info.nickname");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string avatar_url = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_avatar_url().empty()) {
      const ::std::string& _s = this_._internal_avatar_url();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "recordlist.Player_Info.avatar_url");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 area_code = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_area_code() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_area_code(), target);
    }
  }

  // string area_name = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_area_name().empty()) {
      const ::std::string& _s = this_._internal_area_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "recordlist.Player_Info.area_name");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // repeated int32 ninja_number = 6 [packed = false];
  for (int i = 0, n = this_._internal_ninja_number_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        6, this_._internal_ninja_number().Get(i), target);
  }

  // int32 rank = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_rank() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<7>(
              stream, this_._internal_rank(), target);
    }
  }

  // repeated int32 fashion_number = 8 [packed = false];
  for (int i = 0, n = this_._internal_fashion_number_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        8, this_._internal_fashion_number().Get(i), target);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .recordlist.Dynamic_Avatar_Info dynamic_avatar = 9;
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        9, *this_._impl_.dynamic_avatar_, this_._impl_.dynamic_avatar_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:recordlist.Player_Info)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Player_Info::ByteSizeLong(const MessageLite& base) {
  const Player_Info& this_ = static_cast<const Player_Info&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Player_Info::ByteSizeLong() const {
  const Player_Info& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:recordlist.Player_Info)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated int32 ninja_number = 6 [packed = false];
    {
      ::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_ninja_number());
      ::size_t tag_size = ::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_ninja_number_size());
      total_size += tag_size + data_size;
    }
    // repeated int32 fashion_number = 8 [packed = false];
    {
      ::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
          this_._internal_fashion_number());
      ::size_t tag_size = ::size_t{1} *
          ::_pbi::FromIntSize(this_._internal_fashion_number_size());
      total_size += tag_size + data_size;
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // string nickname = 1;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_nickname().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_nickname());
      }
    }
    // string avatar_url = 2;
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_avatar_url().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_avatar_url());
      }
    }
    // string area_name = 4;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_area_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_area_name());
      }
    }
    // .recordlist.Dynamic_Avatar_Info dynamic_avatar = 9;
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.dynamic_avatar_);
    }
    // int32 area_code = 3;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_area_code() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_area_code());
      }
    }
    // int32 rank = 7;
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_rank() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_rank());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Player_Info::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Player_Info*>(&to_msg);
  auto& from = static_cast<const Player_Info&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:recordlist.Player_Info)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ninja_number()->MergeFrom(from._internal_ninja_number());
  _this->_internal_mutable_fashion_number()->MergeFrom(from._internal_fashion_number());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_nickname().empty()) {
        _this->_internal_set_nickname(from._internal_nickname());
      } else {
        if (_this->_impl_.nickname_.IsDefault()) {
          _this->_internal_set_nickname("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_avatar_url().empty()) {
        _this->_internal_set_avatar_url(from._internal_avatar_url());
      } else {
        if (_this->_impl_.avatar_url_.IsDefault()) {
          _this->_internal_set_avatar_url("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_area_name().empty()) {
        _this->_internal_set_area_name(from._internal_area_name());
      } else {
        if (_this->_impl_.area_name_.IsDefault()) {
          _this->_internal_set_area_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.dynamic_avatar_ != nullptr);
      if (_this->_impl_.dynamic_avatar_ == nullptr) {
        _this->_impl_.dynamic_avatar_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.dynamic_avatar_);
      } else {
        _this->_impl_.dynamic_avatar_->MergeFrom(*from._impl_.dynamic_avatar_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_area_code() != 0) {
        _this->_impl_.area_code_ = from._impl_.area_code_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_rank() != 0) {
        _this->_impl_.rank_ = from._impl_.rank_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Player_Info::CopyFrom(const Player_Info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:recordlist.Player_Info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Player_Info::InternalSwap(Player_Info* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.ninja_number_.InternalSwap(&other->_impl_.ninja_number_);
  _impl_.fashion_number_.InternalSwap(&other->_impl_.fashion_number_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, &other->_impl_.nickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.avatar_url_, &other->_impl_.avatar_url_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.area_name_, &other->_impl_.area_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Player_Info, _impl_.rank_)
      + sizeof(Player_Info::_impl_.rank_)
      - PROTOBUF_FIELD_OFFSET(Player_Info, _impl_.dynamic_avatar_)>(
          reinterpret_cast<char*>(&_impl_.dynamic_avatar_),
          reinterpret_cast<char*>(&other->_impl_.dynamic_avatar_));
}

::google::protobuf::Metadata Player_Info::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Player_Record::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Player_Record>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Player_Record, _impl_._has_bits_);
};

Player_Record::Player_Record(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Player_Record_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:recordlist.Player_Record)
}
PROTOBUF_NDEBUG_INLINE Player_Record::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::recordlist::Player_Record& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        datetime_(arena, from.datetime_) {}

Player_Record::Player_Record(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Player_Record& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Player_Record_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Player_Record* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.info_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.info_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, is_temp_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::is_temp_));

  // @@protoc_insertion_point(copy_constructor:recordlist.Player_Record)
}
PROTOBUF_NDEBUG_INLINE Player_Record::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        datetime_(arena) {}

inline void Player_Record::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, info_),
           0,
           offsetof(Impl_, is_temp_) -
               offsetof(Impl_, info_) +
               sizeof(Impl_::is_temp_));
}
Player_Record::~Player_Record() {
  // @@protoc_insertion_point(destructor:recordlist.Player_Record)
  SharedDtor(*this);
}
inline void Player_Record::SharedDtor(MessageLite& self) {
  Player_Record& this_ = static_cast<Player_Record&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.datetime_.Destroy();
  delete this_._impl_.info_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Player_Record::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Player_Record(arena);
}
constexpr auto Player_Record::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Player_Record),
                                            alignof(Player_Record));
}
constexpr auto Player_Record::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Player_Record_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Player_Record::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Player_Record>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Player_Record::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Player_Record>(), &Player_Record::ByteSizeLong,
              &Player_Record::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Player_Record, _impl_._cached_size_),
          false,
      },
      &Player_Record::kDescriptorMethods,
      &descriptor_table_recordlist_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Player_Record_class_data_ =
        Player_Record::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Player_Record::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Player_Record_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Player_Record_class_data_.tc_table);
  return Player_Record_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 41, 2>
Player_Record::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Player_Record, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Player_Record_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::recordlist::Player_Record>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int64 timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Player_Record, _impl_.timestamp_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(Player_Record, _impl_.timestamp_)}},
    // int32 statu = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Player_Record, _impl_.statu_), 3>(),
     {16, 3, 0, PROTOBUF_FIELD_OFFSET(Player_Record, _impl_.statu_)}},
    // string datetime = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(Player_Record, _impl_.datetime_)}},
    // .recordlist.Player_Info info = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(Player_Record, _impl_.info_)}},
    // int32 is_temp = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Player_Record, _impl_.is_temp_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(Player_Record, _impl_.is_temp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(Player_Record, _impl_.timestamp_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int32 statu = 2;
    {PROTOBUF_FIELD_OFFSET(Player_Record, _impl_.statu_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string datetime = 3;
    {PROTOBUF_FIELD_OFFSET(Player_Record, _impl_.datetime_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .recordlist.Player_Info info = 4;
    {PROTOBUF_FIELD_OFFSET(Player_Record, _impl_.info_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 is_temp = 5;
    {PROTOBUF_FIELD_OFFSET(Player_Record, _impl_.is_temp_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::recordlist::Player_Info>()},
  }},
  {{
    "\30\0\0\10\0\0\0\0"
    "recordlist.Player_Record"
    "datetime"
  }},
};
PROTOBUF_NOINLINE void Player_Record::Clear() {
// @@protoc_insertion_point(message_clear_start:recordlist.Player_Record)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.datetime_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.info_ != nullptr);
      _impl_.info_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000001cu) != 0) {
    ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_temp_) -
        reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.is_temp_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Player_Record::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Player_Record& this_ = static_cast<const Player_Record&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Player_Record::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Player_Record& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:recordlist.Player_Record)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 timestamp = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_timestamp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<1>(
              stream, this_._internal_timestamp(), target);
    }
  }

  // int32 statu = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_statu() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_statu(), target);
    }
  }

  // string datetime = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_datetime().empty()) {
      const ::std::string& _s = this_._internal_datetime();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "recordlist.Player_Record.datetime");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .recordlist.Player_Info info = 4;
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.info_, this_._impl_.info_->GetCachedSize(), target,
        stream);
  }

  // int32 is_temp = 5;
  if ((cached_has_bits & 0x00000010u) != 0) {
    if (this_._internal_is_temp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_is_temp(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:recordlist.Player_Record)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Player_Record::ByteSizeLong(const MessageLite& base) {
  const Player_Record& this_ = static_cast<const Player_Record&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Player_Record::ByteSizeLong() const {
  const Player_Record& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:recordlist.Player_Record)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // string datetime = 3;
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_datetime().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_datetime());
      }
    }
    // .recordlist.Player_Info info = 4;
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.info_);
    }
    // int64 timestamp = 1;
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_timestamp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_timestamp());
      }
    }
    // int32 statu = 2;
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_statu() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_statu());
      }
    }
    // int32 is_temp = 5;
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_is_temp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_is_temp());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Player_Record::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Player_Record*>(&to_msg);
  auto& from = static_cast<const Player_Record&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:recordlist.Player_Record)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_datetime().empty()) {
        _this->_internal_set_datetime(from._internal_datetime());
      } else {
        if (_this->_impl_.datetime_.IsDefault()) {
          _this->_internal_set_datetime("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.info_ != nullptr);
      if (_this->_impl_.info_ == nullptr) {
        _this->_impl_.info_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.info_);
      } else {
        _this->_impl_.info_->MergeFrom(*from._impl_.info_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_timestamp() != 0) {
        _this->_impl_.timestamp_ = from._impl_.timestamp_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_statu() != 0) {
        _this->_impl_.statu_ = from._impl_.statu_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_is_temp() != 0) {
        _this->_impl_.is_temp_ = from._impl_.is_temp_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Player_Record::CopyFrom(const Player_Record& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:recordlist.Player_Record)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Player_Record::InternalSwap(Player_Record* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.datetime_, &other->_impl_.datetime_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Player_Record, _impl_.is_temp_)
      + sizeof(Player_Record::_impl_.is_temp_)
      - PROTOBUF_FIELD_OFFSET(Player_Record, _impl_.info_)>(
          reinterpret_cast<char*>(&_impl_.info_),
          reinterpret_cast<char*>(&other->_impl_.info_));
}

::google::protobuf::Metadata Player_Record::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RecordList::_Internal {
 public:
};

RecordList::RecordList(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RecordList_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:recordlist.RecordList)
}
PROTOBUF_NDEBUG_INLINE RecordList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::recordlist::RecordList& from_msg)
      : item_{visibility, arena, from.item_},
        _cached_size_{0} {}

RecordList::RecordList(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RecordList& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RecordList_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RecordList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:recordlist.RecordList)
}
PROTOBUF_NDEBUG_INLINE RecordList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : item_{visibility, arena},
        _cached_size_{0} {}

inline void RecordList::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RecordList::~RecordList() {
  // @@protoc_insertion_point(destructor:recordlist.RecordList)
  SharedDtor(*this);
}
inline void RecordList::SharedDtor(MessageLite& self) {
  RecordList& this_ = static_cast<RecordList&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RecordList::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RecordList(arena);
}
constexpr auto RecordList::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(RecordList, _impl_.item_) +
          decltype(RecordList::_impl_.item_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(RecordList), alignof(RecordList), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&RecordList::PlacementNew_,
                                 sizeof(RecordList),
                                 alignof(RecordList));
  }
}
constexpr auto RecordList::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RecordList_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RecordList::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RecordList>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RecordList::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RecordList>(), &RecordList::ByteSizeLong,
              &RecordList::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RecordList, _impl_._cached_size_),
          false,
      },
      &RecordList::kDescriptorMethods,
      &descriptor_table_recordlist_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RecordList_class_data_ =
        RecordList::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RecordList::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RecordList_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RecordList_class_data_.tc_table);
  return RecordList_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
RecordList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RecordList_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::recordlist::RecordList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .recordlist.Player_Record item = 1 [packed = false];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(RecordList, _impl_.item_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .recordlist.Player_Record item = 1 [packed = false];
    {PROTOBUF_FIELD_OFFSET(RecordList, _impl_.item_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::recordlist::Player_Record>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RecordList::Clear() {
// @@protoc_insertion_point(message_clear_start:recordlist.RecordList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.item_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RecordList::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RecordList& this_ = static_cast<const RecordList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RecordList::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RecordList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:recordlist.RecordList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .recordlist.Player_Record item = 1 [packed = false];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_item_size());
       i < n; i++) {
    const auto& repfield = this_._internal_item().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:recordlist.RecordList)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RecordList::ByteSizeLong(const MessageLite& base) {
  const RecordList& this_ = static_cast<const RecordList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RecordList::ByteSizeLong() const {
  const RecordList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:recordlist.RecordList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .recordlist.Player_Record item = 1 [packed = false];
    {
      total_size += 1UL * this_._internal_item_size();
      for (const auto& msg : this_._internal_item()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RecordList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RecordList*>(&to_msg);
  auto& from = static_cast<const RecordList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:recordlist.RecordList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_item()->MergeFrom(
      from._internal_item());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RecordList::CopyFrom(const RecordList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:recordlist.RecordList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RecordList::InternalSwap(RecordList* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.item_.InternalSwap(&other->_impl_.item_);
}

::google::protobuf::Metadata RecordList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace recordlist
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_recordlist_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
